{"ast":null,"code":"import axios from 'axios';\nimport store from '../store';\nimport router from '../router';\nimport { Message } from 'element-ui';\n\n// 创建 axios 实例\nconst api = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API || '/api',\n  timeout: 5000\n});\n\n// 请求拦截器\napi.interceptors.request.use(config => {\n  const token = store.state.token;\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 响应拦截器\napi.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        store.dispatch('logout');\n        router.push('/login');\n        Message.error('登录已过期，请重新登录');\n        break;\n      case 403:\n        Message.error('没有权限执行此操作');\n        break;\n      case 400:\n        Message.error(error.response.data.message || '请求参数错误');\n        break;\n      default:\n        Message.error('服务器错误');\n    }\n  } else {\n    Message.error('网络错误');\n  }\n  return Promise.reject(error);\n});\nexport default {\n  // 用户相关\n  login: data => api.post('/users/login', data),\n  register: data => api.post('/users/register', data),\n  updatePassword: data => api.put('/users/password', data),\n  getUsers: () => api.get('/users'),\n  // 消息相关\n  getMessages: () => api.get('/messages/my'),\n  sendMessage: data => api.post('/messages', data),\n  sendDepartmentMessage: (deptId, data) => api.post(`/messages/department/${deptId}`, data),\n  markMessageAsRead: messageId => api.put(`/messages/${messageId}/read`),\n  // 任务相关\n  getTasks: () => api.get('/tasks/my'),\n  getDepartmentTasks: deptId => api.get(`/tasks/department/${deptId}`),\n  createTask: data => api.post('/tasks', data),\n  updateTaskStatus: (taskId, status) => api.put(`/tasks/${taskId}/status`, {\n    status\n  }),\n  // 部门相关\n  getDepartments: () => api.get('/departments'),\n  createDepartment: data => api.post('/departments', data),\n  updateDepartment: (deptId, data) => api.put(`/departments/${deptId}`, data),\n  deleteDepartment: deptId => api.delete(`/departments/${deptId}`),\n  assignManager: (deptId, managerId) => api.put(`/departments/${deptId}/manager/${managerId}`)\n};","map":{"version":3,"names":["axios","store","router","Message","api","create","baseURL","process","env","VUE_APP_BASE_API","timeout","interceptors","request","use","config","token","state","headers","error","Promise","reject","response","data","status","dispatch","push","message","login","post","register","updatePassword","put","getUsers","get","getMessages","sendMessage","sendDepartmentMessage","deptId","markMessageAsRead","messageId","getTasks","getDepartmentTasks","createTask","updateTaskStatus","taskId","getDepartments","createDepartment","updateDepartment","deleteDepartment","delete","assignManager","managerId"],"sources":["D:/oasystem/src/main/resources/static/frontend/src/api/index.js"],"sourcesContent":["import axios from 'axios'\nimport store from '../store'\nimport router from '../router'\nimport { Message } from 'element-ui'\n\n// 创建 axios 实例\nconst api = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API || '/api',\n  timeout: 5000\n})\n\n// 请求拦截器\napi.interceptors.request.use(\n  config => {\n    const token = store.state.token\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`\n    }\n    return config\n  },\n  error => {\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\napi.interceptors.response.use(\n  response => {\n    return response.data\n  },\n  error => {\n    if (error.response) {\n      switch (error.response.status) {\n        case 401:\n          store.dispatch('logout')\n          router.push('/login')\n          Message.error('登录已过期，请重新登录')\n          break\n        case 403:\n          Message.error('没有权限执行此操作')\n          break\n        case 400:\n          Message.error(error.response.data.message || '请求参数错误')\n          break\n        default:\n          Message.error('服务器错误')\n      }\n    } else {\n      Message.error('网络错误')\n    }\n    return Promise.reject(error)\n  }\n)\n\nexport default {\n  // 用户相关\n  login: data => api.post('/users/login', data),\n  register: data => api.post('/users/register', data),\n  updatePassword: data => api.put('/users/password', data),\n  getUsers: () => api.get('/users'),\n  \n  // 消息相关\n  getMessages: () => api.get('/messages/my'),\n  sendMessage: data => api.post('/messages', data),\n  sendDepartmentMessage: (deptId, data) => api.post(`/messages/department/${deptId}`, data),\n  markMessageAsRead: messageId => api.put(`/messages/${messageId}/read`),\n  \n  // 任务相关\n  getTasks: () => api.get('/tasks/my'),\n  getDepartmentTasks: deptId => api.get(`/tasks/department/${deptId}`),\n  createTask: data => api.post('/tasks', data),\n  updateTaskStatus: (taskId, status) => api.put(`/tasks/${taskId}/status`, { status }),\n  \n  // 部门相关\n  getDepartments: () => api.get('/departments'),\n  createDepartment: data => api.post('/departments', data),\n  updateDepartment: (deptId, data) => api.put(`/departments/${deptId}`, data),\n  deleteDepartment: deptId => api.delete(`/departments/${deptId}`),\n  assignManager: (deptId, managerId) => api.put(`/departments/${deptId}/manager/${managerId}`)\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}