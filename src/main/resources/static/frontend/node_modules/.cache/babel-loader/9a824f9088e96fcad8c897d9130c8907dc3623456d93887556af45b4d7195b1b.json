{"ast":null,"code":"export default {\n  name: 'Login',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      loading: false\n    };\n  },\n  methods: {\n    async handleLogin() {\n      try {\n        console.log('开始登录...');\n        this.loading = true;\n        await this.$refs.loginForm.validate();\n        console.log('表单验证通过，发送登录请求...');\n        const user = await this.$store.dispatch('login', this.loginForm);\n        console.log('登录成功，用户信息：', user);\n\n        // 登录成功后跳转\n        const redirect = this.$route.query.redirect;\n        console.log('重定向地址：', redirect);\n        if (redirect && redirect !== '/login') {\n          console.log('跳转到重定向地址：', redirect);\n          await this.$router.replace(redirect);\n        } else {\n          console.log('跳转到首页');\n          await this.$router.replace('/dashboard');\n        }\n      } catch (error) {\n        console.error('登录失败：', error);\n        if (error.message) {\n          this.$message.error(error.message);\n        }\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","loginForm","username","password","rules","required","message","trigger","loading","methods","handleLogin","console","log","$refs","validate","user","$store","dispatch","redirect","$route","query","$router","replace","error","$message"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <el-card class=\"login-card\">\n      <div slot=\"header\">\n        <span>系统登录</span>\n      </div>\n      <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"loginForm\">\n        <el-form-item prop=\"username\">\n          <el-input\n            v-model=\"loginForm.username\"\n            prefix-icon=\"el-icon-user\"\n            placeholder=\"用户名\">\n          </el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            prefix-icon=\"el-icon-lock\"\n            type=\"password\"\n            placeholder=\"密码\"\n            @keyup.enter.native=\"handleLogin\">\n          </el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleLogin\" :loading=\"loading\" style=\"width: 100%\">\n            登录\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ]\n      },\n      loading: false\n    }\n  },\n  methods: {\n    async handleLogin() {\n      try {\n        console.log('开始登录...')\n        this.loading = true\n        await this.$refs.loginForm.validate()\n        console.log('表单验证通过，发送登录请求...')\n        \n        const user = await this.$store.dispatch('login', this.loginForm)\n        console.log('登录成功，用户信息：', user)\n        \n        // 登录成功后跳转\n        const redirect = this.$route.query.redirect\n        console.log('重定向地址：', redirect)\n        \n        if (redirect && redirect !== '/login') {\n          console.log('跳转到重定向地址：', redirect)\n          await this.$router.replace(redirect)\n        } else {\n          console.log('跳转到首页')\n          await this.$router.replace('/dashboard')\n        }\n      } catch (error) {\n        console.error('登录失败：', error)\n        if (error.message) {\n          this.$message.error(error.message)\n        }\n      } finally {\n        this.loading = false\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.login-container {\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #f5f7fa;\n}\n\n.login-card {\n  width: 400px;\n}\n</style> "],"mappings":"AAkCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,YAAA;MACA;QACAC,OAAA,CAAAC,GAAA;QACA,KAAAJ,OAAA;QACA,WAAAK,KAAA,CAAAZ,SAAA,CAAAa,QAAA;QACAH,OAAA,CAAAC,GAAA;QAEA,MAAAG,IAAA,cAAAC,MAAA,CAAAC,QAAA,eAAAhB,SAAA;QACAU,OAAA,CAAAC,GAAA,eAAAG,IAAA;;QAEA;QACA,MAAAG,QAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAF,QAAA;QACAP,OAAA,CAAAC,GAAA,WAAAM,QAAA;QAEA,IAAAA,QAAA,IAAAA,QAAA;UACAP,OAAA,CAAAC,GAAA,cAAAM,QAAA;UACA,WAAAG,OAAA,CAAAC,OAAA,CAAAJ,QAAA;QACA;UACAP,OAAA,CAAAC,GAAA;UACA,WAAAS,OAAA,CAAAC,OAAA;QACA;MACA,SAAAC,KAAA;QACAZ,OAAA,CAAAY,KAAA,UAAAA,KAAA;QACA,IAAAA,KAAA,CAAAjB,OAAA;UACA,KAAAkB,QAAA,CAAAD,KAAA,CAAAA,KAAA,CAAAjB,OAAA;QACA;MACA;QACA,KAAAE,OAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}