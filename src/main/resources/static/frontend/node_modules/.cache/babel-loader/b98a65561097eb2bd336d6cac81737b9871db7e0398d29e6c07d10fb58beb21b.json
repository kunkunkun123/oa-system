{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport store from '../store';\nimport Users from '../views/Users.vue';\nimport Departments from '../views/Departments.vue';\nimport Announcements from '../views/Announcements.vue';\nVue.use(VueRouter);\n\n// 修复路由重复导航错误\nconst originalPush = VueRouter.prototype.push;\nVueRouter.prototype.push = function push(location) {\n  return originalPush.call(this, location).catch(err => err);\n};\nconst originalReplace = VueRouter.prototype.replace;\nVueRouter.prototype.replace = function replace(location) {\n  return originalReplace.call(this, location).catch(err => err);\n};\nconst routes = [{\n  path: '/login',\n  name: 'Login',\n  component: () => import('../views/Login.vue'),\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/',\n  redirect: '/dashboard'\n}, {\n  path: '/dashboard',\n  name: 'Dashboard',\n  component: () => import('../views/Dashboard.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/messages',\n  name: 'Messages',\n  component: () => import('../views/Messages.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/tasks',\n  name: 'Tasks',\n  component: () => import('../views/Tasks.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/departments',\n  name: 'Departments',\n  component: Departments,\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}, {\n  path: '/users',\n  name: 'Users',\n  component: Users,\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}, {\n  path: '/announcements',\n  name: 'Announcements',\n  component: Announcements,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\n\n// 路由守卫\nrouter.beforeEach(async (to, from, next) => {\n  console.log('路由守卫：', {\n    to: to.fullPath,\n    from: from.fullPath,\n    isLoggedIn: store.getters.isLoggedIn,\n    user: store.getters.currentUser\n  });\n\n  // 检查路由是否需要认证\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    console.log('当前路由需要认证');\n    // 检查用户是否已登录\n    if (!store.getters.isLoggedIn) {\n      console.log('用户未登录，重定向到登录页');\n      next({\n        path: '/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n      return;\n    }\n    // 检查是否需要管理员权限\n    if (to.matched.some(record => record.meta.requiresAdmin)) {\n      console.log('当前路由需要管理员权限');\n      if (!store.getters.isAdmin) {\n        console.log('用户不是管理员，重定向到首页');\n        next('/dashboard');\n        return;\n      }\n    }\n  }\n\n  // 如果已登录用户访问登录页，重定向到首页\n  if (to.path === '/login' && store.getters.isLoggedIn) {\n    console.log('已登录用户访问登录页，重定向到首页');\n    next('/dashboard');\n    return;\n  }\n  console.log('允许导航到：', to.fullPath);\n  next();\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","store","Users","Departments","Announcements","use","originalPush","prototype","push","location","call","catch","err","originalReplace","replace","routes","path","name","component","meta","requiresAuth","redirect","requiresAdmin","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","console","log","fullPath","isLoggedIn","getters","user","currentUser","matched","some","record","query","isAdmin"],"sources":["D:/oasystem/src/main/resources/static/frontend/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport store from '../store'\nimport Users from '../views/Users.vue'\nimport Departments from '../views/Departments.vue'\nimport Announcements from '../views/Announcements.vue'\n\nVue.use(VueRouter)\n\n// 修复路由重复导航错误\nconst originalPush = VueRouter.prototype.push\nVueRouter.prototype.push = function push(location) {\n  return originalPush.call(this, location).catch(err => err)\n}\n\nconst originalReplace = VueRouter.prototype.replace\nVueRouter.prototype.replace = function replace(location) {\n  return originalReplace.call(this, location).catch(err => err)\n}\n\nconst routes = [\n  {\n    path: '/login',\n    name: 'Login',\n    component: () => import('../views/Login.vue'),\n    meta: { requiresAuth: false }\n  },\n  {\n    path: '/',\n    redirect: '/dashboard'\n  },\n  {\n    path: '/dashboard',\n    name: 'Dashboard',\n    component: () => import('../views/Dashboard.vue'),\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/messages',\n    name: 'Messages',\n    component: () => import('../views/Messages.vue'),\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/tasks',\n    name: 'Tasks',\n    component: () => import('../views/Tasks.vue'),\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/departments',\n    name: 'Departments',\n    component: Departments,\n    meta: { requiresAuth: true, requiresAdmin: true }\n  },\n  {\n    path: '/users',\n    name: 'Users',\n    component: Users,\n    meta: { requiresAuth: true, requiresAdmin: true }\n  },\n  {\n    path: '/announcements',\n    name: 'Announcements',\n    component: Announcements,\n    meta: { requiresAuth: true }\n  }\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n\n// 路由守卫\nrouter.beforeEach(async (to, from, next) => {\n  console.log('路由守卫：', {\n    to: to.fullPath,\n    from: from.fullPath,\n    isLoggedIn: store.getters.isLoggedIn,\n    user: store.getters.currentUser\n  })\n  \n  // 检查路由是否需要认证\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    console.log('当前路由需要认证')\n    // 检查用户是否已登录\n    if (!store.getters.isLoggedIn) {\n      console.log('用户未登录，重定向到登录页')\n      next({\n        path: '/login',\n        query: { redirect: to.fullPath }\n      })\n      return\n    }\n    // 检查是否需要管理员权限\n    if (to.matched.some(record => record.meta.requiresAdmin)) {\n      console.log('当前路由需要管理员权限')\n      if (!store.getters.isAdmin) {\n        console.log('用户不是管理员，重定向到首页')\n        next('/dashboard')\n        return\n      }\n    }\n  }\n  \n  // 如果已登录用户访问登录页，重定向到首页\n  if (to.path === '/login' && store.getters.isLoggedIn) {\n    console.log('已登录用户访问登录页，重定向到首页')\n    next('/dashboard')\n    return\n  }\n  \n  console.log('允许导航到：', to.fullPath)\n  next()\n})\n\nexport default router "],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AAEtDL,GAAG,CAACM,GAAG,CAACL,SAAS,CAAC;;AAElB;AACA,MAAMM,YAAY,GAAGN,SAAS,CAACO,SAAS,CAACC,IAAI;AAC7CR,SAAS,CAACO,SAAS,CAACC,IAAI,GAAG,SAASA,IAAIA,CAACC,QAAQ,EAAE;EACjD,OAAOH,YAAY,CAACI,IAAI,CAAC,IAAI,EAAED,QAAQ,CAAC,CAACE,KAAK,CAACC,GAAG,IAAIA,GAAG,CAAC;AAC5D,CAAC;AAED,MAAMC,eAAe,GAAGb,SAAS,CAACO,SAAS,CAACO,OAAO;AACnDd,SAAS,CAACO,SAAS,CAACO,OAAO,GAAG,SAASA,OAAOA,CAACL,QAAQ,EAAE;EACvD,OAAOI,eAAe,CAACH,IAAI,CAAC,IAAI,EAAED,QAAQ,CAAC,CAACE,KAAK,CAACC,GAAG,IAAIA,GAAG,CAAC;AAC/D,CAAC;AAED,MAAMG,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,oBAAoB,CAAC;EAC7CC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAM;AAC9B,CAAC,EACD;EACEJ,IAAI,EAAE,GAAG;EACTK,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,wBAAwB,CAAC;EACjDC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,uBAAuB,CAAC;EAChDC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,oBAAoB,CAAC;EAC7CC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEf,WAAW;EACtBgB,IAAI,EAAE;IAAEC,YAAY,EAAE,IAAI;IAAEE,aAAa,EAAE;EAAK;AAClD,CAAC,EACD;EACEN,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEhB,KAAK;EAChBiB,IAAI,EAAE;IAAEC,YAAY,EAAE,IAAI;IAAEE,aAAa,EAAE;EAAK;AAClD,CAAC,EACD;EACEN,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,eAAe;EACrBC,SAAS,EAAEd,aAAa;EACxBe,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,CACF;AAED,MAAMG,MAAM,GAAG,IAAIvB,SAAS,CAAC;EAC3BwB,IAAI,EAAE,SAAS;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAC1Bb;AACF,CAAC,CAAC;;AAEF;AACAQ,MAAM,CAACM,UAAU,CAAC,OAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC1CC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE;IACnBJ,EAAE,EAAEA,EAAE,CAACK,QAAQ;IACfJ,IAAI,EAAEA,IAAI,CAACI,QAAQ;IACnBC,UAAU,EAAEnC,KAAK,CAACoC,OAAO,CAACD,UAAU;IACpCE,IAAI,EAAErC,KAAK,CAACoC,OAAO,CAACE;EACtB,CAAC,CAAC;;EAEF;EACA,IAAIT,EAAE,CAACU,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACvB,IAAI,CAACC,YAAY,CAAC,EAAE;IACvDa,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvB;IACA,IAAI,CAACjC,KAAK,CAACoC,OAAO,CAACD,UAAU,EAAE;MAC7BH,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5BF,IAAI,CAAC;QACHhB,IAAI,EAAE,QAAQ;QACd2B,KAAK,EAAE;UAAEtB,QAAQ,EAAES,EAAE,CAACK;QAAS;MACjC,CAAC,CAAC;MACF;IACF;IACA;IACA,IAAIL,EAAE,CAACU,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACvB,IAAI,CAACG,aAAa,CAAC,EAAE;MACxDW,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1B,IAAI,CAACjC,KAAK,CAACoC,OAAO,CAACO,OAAO,EAAE;QAC1BX,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QAC7BF,IAAI,CAAC,YAAY,CAAC;QAClB;MACF;IACF;EACF;;EAEA;EACA,IAAIF,EAAE,CAACd,IAAI,KAAK,QAAQ,IAAIf,KAAK,CAACoC,OAAO,CAACD,UAAU,EAAE;IACpDH,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChCF,IAAI,CAAC,YAAY,CAAC;IAClB;EACF;EAEAC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,EAAE,CAACK,QAAQ,CAAC;EAClCH,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;AAEF,eAAeT,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}