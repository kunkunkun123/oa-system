{"ast":null,"code":"import axios from 'axios';\nimport { Message } from 'element-ui';\nimport store from '@/store';\nimport router from '@/router';\n\n// 创建 axios 实例\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API || '/api',\n  timeout: 15000\n});\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  const token = store.state.token;\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(response => response.data, error => {\n  console.error('API Error:', error);\n  if (error.response) {\n    const {\n      status,\n      data,\n      config\n    } = error.response;\n    switch (status) {\n      case 401:\n        // token 失效，清除 token 并跳转到登录页\n        store.dispatch('resetToken');\n        router.push('/login');\n        Message.error('登录已过期，请重新登录');\n        break;\n      case 403:\n        Message.error('没有权限执行此操作');\n        break;\n      case 404:\n        console.error('请求的资源不存在:', error.config.url);\n        Message.error('请求的资源不存在');\n        break;\n      case 500:\n        Message.error('服务器内部错误');\n        break;\n      default:\n        Message.error(data.message || '请求失败');\n    }\n  } else {\n    Message.error('网络错误，请检查您的网络连接');\n  }\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","Message","store","router","service","create","baseURL","process","env","VUE_APP_BASE_API","timeout","interceptors","request","use","config","token","state","headers","error","console","Promise","reject","response","data","status","dispatch","push","url","message"],"sources":["D:/oasystem/src/main/resources/static/frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport { Message } from 'element-ui'\nimport store from '@/store'\nimport router from '@/router'\n\n// 创建 axios 实例\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API || '/api',\n  timeout: 15000\n})\n\n// 请求拦截器\nservice.interceptors.request.use(\n  config => {\n    const token = store.state.token\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`\n    }\n    return config\n  },\n  error => {\n    console.error('Request error:', error)\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\nservice.interceptors.response.use(\n  response => response.data,\n  error => {\n    console.error('API Error:', error)\n    if (error.response) {\n      const { status, data, config } = error.response\n      switch (status) {\n        case 401:\n          // token 失效，清除 token 并跳转到登录页\n          store.dispatch('resetToken')\n          router.push('/login')\n          Message.error('登录已过期，请重新登录')\n          break\n          \n        case 403:\n          Message.error('没有权限执行此操作')\n          break\n          \n        case 404:\n          console.error('请求的资源不存在:', error.config.url)\n          Message.error('请求的资源不存在')\n          break\n          \n        case 500:\n          Message.error('服务器内部错误')\n          break\n          \n        default:\n          Message.error(data.message || '请求失败')\n      }\n    } else {\n      Message.error('网络错误，请检查您的网络连接')\n    }\n    return Promise.reject(error)\n  }\n)\n\nexport default service "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,YAAY;AACpC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AACA,MAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAM,CAAC;EAC3BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,gBAAgB,IAAI,MAAM;EAC/CC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAN,OAAO,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAI;EACR,MAAMC,KAAK,GAAGb,KAAK,CAACc,KAAK,CAACD,KAAK;EAC/B,IAAIA,KAAK,EAAE;IACTD,MAAM,CAACG,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUF,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACDI,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAd,OAAO,CAACO,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC/BS,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EACzBL,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAClC,IAAIA,KAAK,CAACI,QAAQ,EAAE;IAClB,MAAM;MAAEE,MAAM;MAAED,IAAI;MAAET;IAAO,CAAC,GAAGI,KAAK,CAACI,QAAQ;IAC/C,QAAQE,MAAM;MACZ,KAAK,GAAG;QACN;QACAtB,KAAK,CAACuB,QAAQ,CAAC,YAAY,CAAC;QAC5BtB,MAAM,CAACuB,IAAI,CAAC,QAAQ,CAAC;QACrBzB,OAAO,CAACiB,KAAK,CAAC,aAAa,CAAC;QAC5B;MAEF,KAAK,GAAG;QACNjB,OAAO,CAACiB,KAAK,CAAC,WAAW,CAAC;QAC1B;MAEF,KAAK,GAAG;QACNC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAACJ,MAAM,CAACa,GAAG,CAAC;QAC5C1B,OAAO,CAACiB,KAAK,CAAC,UAAU,CAAC;QACzB;MAEF,KAAK,GAAG;QACNjB,OAAO,CAACiB,KAAK,CAAC,SAAS,CAAC;QACxB;MAEF;QACEjB,OAAO,CAACiB,KAAK,CAACK,IAAI,CAACK,OAAO,IAAI,MAAM,CAAC;IACzC;EACF,CAAC,MAAM;IACL3B,OAAO,CAACiB,KAAK,CAAC,gBAAgB,CAAC;EACjC;EACA,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAed,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}