{"ast":null,"code":"import api from '../api';\nimport { formatDate } from '../utils/date';\nexport default {\n  name: 'Dashboard',\n  data() {\n    return {\n      unreadMessages: [],\n      todayTasks: [],\n      department: null,\n      departmentUsers: [],\n      loading: false,\n      statistics: {\n        unreadMessages: 0,\n        monthlyTasks: 0,\n        pendingTasks: 0,\n        completedTasks: 0,\n        totalTasks: 0\n      }\n    };\n  },\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    formatDate,\n    async fetchData() {\n      this.loading = true;\n      try {\n        const [tasks, messages] = await Promise.all([api.getMyTasks(), api.getMessages()]);\n        this.todayTasks = tasks.filter(task => task.dueDate && task.dueDate.startsWith(this.today));\n        this.unreadMessages = messages.filter(msg => msg && !msg.isRead);\n\n        // 获取当前月份\n        const now = new Date();\n        const currentMonth = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}`;\n\n        // 统计数据\n        this.statistics = {\n          totalTasks: tasks.length,\n          monthlyTasks: tasks.filter(task => task.dueDate && task.dueDate.startsWith(currentMonth)).length,\n          pendingTasks: tasks.filter(task => task && task.status === 0).length,\n          completedTasks: tasks.filter(task => task && task.status === 2).length,\n          unreadMessages: this.unreadMessages.length\n        };\n        if (this.$store.getters.currentUser.deptId) {\n          const [dept, users] = await Promise.all([api.getDepartments(), api.getUsers()]);\n          console.log('部门列表:', dept);\n          console.log('当前用户部门ID:', this.$store.getters.currentUser.deptId);\n          const department = dept.find(d => d.deptId === this.$store.getters.currentUser.deptId);\n          console.log('找到的部门:', department);\n          this.department = department;\n          this.departmentUsers = users.filter(u => u.deptId === this.$store.getters.currentUser.deptId);\n        }\n      } catch (error) {\n        console.error('获取数据失败:', error);\n        this.$message.error('获取数据失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    computed: {\n      today() {\n        const now = new Date();\n        return `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')}`;\n      },\n      completionRate() {\n        if (this.statistics.totalTasks === 0) return 0;\n        return Math.round(this.statistics.completedTasks / this.statistics.totalTasks * 100);\n      }\n    },\n    getStatusText(status) {\n      if (status === null || status === undefined) return '未知';\n      const texts = {\n        0: '待处理',\n        1: '进行中',\n        2: '已完成'\n      };\n      return texts[status] ?? '未知';\n    },\n    getStatusType(status) {\n      if (status === null || status === undefined) return '';\n      const types = {\n        0: 'info',\n        1: 'warning',\n        2: 'success'\n      };\n      return types[status] ?? '';\n    }\n  }\n};","map":{"version":3,"names":["api","formatDate","name","data","unreadMessages","todayTasks","department","departmentUsers","loading","statistics","monthlyTasks","pendingTasks","completedTasks","totalTasks","created","fetchData","methods","tasks","messages","Promise","all","getMyTasks","getMessages","filter","task","dueDate","startsWith","today","msg","isRead","now","Date","currentMonth","getFullYear","String","getMonth","padStart","length","status","$store","getters","currentUser","deptId","dept","users","getDepartments","getUsers","console","log","find","d","u","error","$message","computed","getDate","completionRate","Math","round","getStatusText","undefined","texts","getStatusType","types"],"sources":["src/views/Dashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <el-row :gutter=\"20\">\n      <el-col :span=\"6\">\n        <el-card class=\"box-card\">\n          <div class=\"card-content\">\n            <div class=\"stat-title\">未读消息</div>\n            <div class=\"stat-value\">{{ statistics.unreadMessages }}</div>\n            <div class=\"stat-action\">\n              <el-button type=\"text\" @click=\"$router.push('/messages')\">查看详情</el-button>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"6\">\n        <el-card class=\"box-card\">\n          <div class=\"card-content\">\n            <div class=\"stat-title\">本月任务</div>\n            <div class=\"stat-value\">{{ statistics.monthlyTasks }}</div>\n            <div class=\"stat-action\">\n              <el-button type=\"text\" @click=\"$router.push('/tasks')\">查看详情</el-button>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"6\">\n        <el-card class=\"box-card\">\n          <div class=\"card-content\">\n            <div class=\"stat-title\">待处理任务</div>\n            <div class=\"stat-value\">{{ statistics.pendingTasks }}</div>\n            <div class=\"stat-action\">\n              <el-button type=\"text\" @click=\"$router.push('/tasks')\">查看详情</el-button>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"6\">\n        <el-card class=\"box-card\">\n          <div class=\"card-content\">\n            <div class=\"stat-title\">已完成任务</div>\n            <div class=\"stat-value\">{{ statistics.completedTasks }}</div>\n            <div class=\"stat-action\">\n              <el-button type=\"text\" @click=\"$router.push('/tasks')\">查看详情</el-button>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    \n    <el-row :gutter=\"20\" style=\"margin-top: 20px\">\n      <el-col :span=\"16\">\n        <el-card class=\"box-card\">\n          <div slot=\"header\">\n            <span>任务完成情况</span>\n          </div>\n          <div class=\"chart-container\">\n            <el-progress type=\"circle\" :percentage=\"completionRate\" :width=\"150\">\n              <template #default=\"{ percentage }\">\n                <span class=\"progress-label\">\n                  完成率<br/>{{ percentage }}%\n                </span>\n              </template>\n            </el-progress>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"8\">\n        <el-card class=\"box-card\">\n          <div slot=\"header\">\n            <span>部门信息</span>\n          </div>\n          <div v-if=\"department\" class=\"dept-info\">\n            <p><label>部门名称：</label>{{ department.deptName }}</p>\n            <p><label>部门经理：</label>{{ department.manager ? department.manager.name : '暂无' }}</p>\n            <p><label>部门人数：</label>{{ departmentUsers.length }}人</p>\n          </div>\n          <div v-else class=\"empty-text\">暂无部门信息</div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport api from '../api'\nimport { formatDate } from '../utils/date'\n\nexport default {\n  name: 'Dashboard',\n  data() {\n    return {\n      unreadMessages: [],\n      todayTasks: [],\n      department: null,\n      departmentUsers: [],\n      loading: false,\n      statistics: {\n        unreadMessages: 0,\n        monthlyTasks: 0,\n        pendingTasks: 0,\n        completedTasks: 0,\n        totalTasks: 0\n      }\n    }\n  },\n  created() {\n    this.fetchData()\n  },\n  methods: {\n    formatDate,\n    async fetchData() {\n      this.loading = true\n      try {\n        const [tasks, messages] = await Promise.all([\n          api.getMyTasks(),\n          api.getMessages()\n        ])\n        \n        this.todayTasks = tasks.filter(task => task.dueDate && task.dueDate.startsWith(this.today))\n        \n        this.unreadMessages = messages.filter(msg => msg && !msg.isRead)\n        \n        // 获取当前月份\n        const now = new Date()\n        const currentMonth = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}`\n        \n        // 统计数据\n        this.statistics = {\n          totalTasks: tasks.length,\n          monthlyTasks: tasks.filter(task => task.dueDate && task.dueDate.startsWith(currentMonth)).length,\n          pendingTasks: tasks.filter(task => task && task.status === 0).length,\n          completedTasks: tasks.filter(task => task && task.status === 2).length,\n          unreadMessages: this.unreadMessages.length\n        }\n        \n        if (this.$store.getters.currentUser.deptId) {\n          const [dept, users] = await Promise.all([\n            api.getDepartments(),\n            api.getUsers()\n          ])\n          console.log('部门列表:', dept)\n          console.log('当前用户部门ID:', this.$store.getters.currentUser.deptId)\n          const department = dept.find(d => d.deptId === this.$store.getters.currentUser.deptId)\n          console.log('找到的部门:', department)\n          this.department = department\n          this.departmentUsers = users.filter(u => u.deptId === this.$store.getters.currentUser.deptId)\n        }\n      } catch (error) {\n        console.error('获取数据失败:', error)\n        this.$message.error('获取数据失败')\n      } finally {\n        this.loading = false\n      }\n    },\n    computed: {\n      today() {\n        const now = new Date()\n        return `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')}`\n      },\n      completionRate() {\n        if (this.statistics.totalTasks === 0) return 0\n        return Math.round((this.statistics.completedTasks / this.statistics.totalTasks) * 100)\n      }\n    },\n    getStatusText(status) {\n      if (status === null || status === undefined) return '未知'\n      const texts = {\n        0: '待处理',\n        1: '进行中',\n        2: '已完成'\n      }\n      return texts[status] ?? '未知'\n    },\n    getStatusType(status) {\n      if (status === null || status === undefined) return ''\n      const types = {\n        0: 'info',\n        1: 'warning',\n        2: 'success'\n      }\n      return types[status] ?? ''\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard {\n  padding: 20px;\n}\n\n.box-card {\n  margin-bottom: 20px;\n  height: 100%;\n}\n\n.card-content {\n  text-align: center;\n  padding: 20px 0;\n}\n\n.stat-title {\n  font-size: 16px;\n  color: #606266;\n  margin-bottom: 15px;\n}\n\n.stat-value {\n  font-size: 36px;\n  font-weight: bold;\n  color: #303133;\n  margin-bottom: 15px;\n}\n\n.stat-action {\n  margin-top: 10px;\n}\n\n.chart-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n}\n\n.progress-label {\n  font-size: 14px;\n  text-align: center;\n  color: #606266;\n}\n\n.dept-info {\n  padding: 20px;\n  \n  p {\n    margin: 10px 0;\n    \n    label {\n      color: #606266;\n      margin-right: 10px;\n    }\n  }\n}\n\n.empty-text {\n  text-align: center;\n  color: #999;\n  padding: 20px 0;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}