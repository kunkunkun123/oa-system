{"ast":null,"code":"import api from '../api';\nimport { formatDate } from '../utils/date';\nexport default {\n  name: 'Dashboard',\n  data() {\n    return {\n      unreadMessages: [],\n      todayTasks: [],\n      department: null,\n      departmentUsers: [],\n      loading: false,\n      statistics: {\n        unreadMessages: 0,\n        monthlyTasks: 0,\n        pendingTasks: 0,\n        completedTasks: 0,\n        totalTasks: 0\n      }\n    };\n  },\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    formatDate,\n    async fetchData() {\n      this.loading = true;\n      try {\n        const [tasks, messages] = await Promise.all([api.getMyTasks(), api.getMessages()]);\n        this.todayTasks = tasks.filter(task => task.dueDate && task.dueDate.startsWith(this.today));\n        this.unreadMessages = messages.filter(msg => msg && !msg.isRead);\n\n        // 获取当前月份\n        const now = new Date();\n        const currentMonth = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}`;\n\n        // 统计数据\n        this.statistics = {\n          totalTasks: tasks.length,\n          monthlyTasks: tasks.filter(task => task.dueDate && task.dueDate.startsWith(currentMonth)).length,\n          pendingTasks: tasks.filter(task => task && task.status === 0).length,\n          completedTasks: tasks.filter(task => task && task.status === 2).length,\n          unreadMessages: this.unreadMessages.length\n        };\n        if (this.$store.getters.currentUser.deptId) {\n          const [dept, users] = await Promise.all([api.getDepartments(), api.getUsers()]);\n          console.log('部门列表:', dept);\n          console.log('当前用户部门ID:', this.$store.getters.currentUser.deptId);\n          const department = dept.find(d => d.deptId === this.$store.getters.currentUser.deptId);\n          console.log('找到的部门:', department);\n          this.department = department;\n          this.departmentUsers = users.filter(u => u.deptId === this.$store.getters.currentUser.deptId);\n        }\n      } catch (error) {\n        console.error('获取数据失败:', error);\n        this.$message.error('获取数据失败');\n      } finally {\n        this.loading = false;\n      }\n    }\n  },\n  computed: {\n    today() {\n      const now = new Date();\n      return `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')}`;\n    },\n    completionRate() {\n      if (this.statistics.totalTasks === 0) return 0;\n      return Math.round(this.statistics.completedTasks / this.statistics.totalTasks * 100);\n    },\n    customColors: [{\n      color: '#f56c6c',\n      percentage: 20\n    }, {\n      color: '#e6a23c',\n      percentage: 40\n    }, {\n      color: '#5cb87a',\n      percentage: 60\n    }, {\n      color: '#1989fa',\n      percentage: 80\n    }, {\n      color: '#67c23a',\n      percentage: 100\n    }]\n  },\n  getStatusText(status) {\n    if (status === null || status === undefined) return '未知';\n    const texts = {\n      0: '待处理',\n      1: '进行中',\n      2: '已完成'\n    };\n    return texts[status] ?? '未知';\n  },\n  getStatusType(status) {\n    if (status === null || status === undefined) return '';\n    const types = {\n      0: 'info',\n      1: 'warning',\n      2: 'success'\n    };\n    return types[status] ?? '';\n  }\n};","map":{"version":3,"names":["api","formatDate","name","data","unreadMessages","todayTasks","department","departmentUsers","loading","statistics","monthlyTasks","pendingTasks","completedTasks","totalTasks","created","fetchData","methods","tasks","messages","Promise","all","getMyTasks","getMessages","filter","task","dueDate","startsWith","today","msg","isRead","now","Date","currentMonth","getFullYear","String","getMonth","padStart","length","status","$store","getters","currentUser","deptId","dept","users","getDepartments","getUsers","console","log","find","d","u","error","$message","computed","getDate","completionRate","Math","round","customColors","color","percentage","getStatusText","undefined","texts","getStatusType","types"],"sources":["src/views/Dashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <el-row :gutter=\"20\">\n      <el-col :span=\"4\">\n        <el-card class=\"box-card message-card\">\n          <div class=\"card-content\">\n            <div class=\"stat-title\">未读消息</div>\n            <div class=\"stat-value\">{{ statistics.unreadMessages }}</div>\n            <div class=\"stat-action\">\n              <el-button type=\"text\" class=\"message-btn\" @click=\"$router.push('/messages')\">查看详情</el-button>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"4\">\n        <el-card class=\"box-card monthly-card\">\n          <div class=\"card-content\">\n            <div class=\"stat-title\">本月任务</div>\n            <div class=\"stat-value\">{{ statistics.monthlyTasks }}</div>\n            <div class=\"stat-action\">\n              <el-button type=\"text\" class=\"monthly-btn\" @click=\"$router.push('/tasks')\">查看详情</el-button>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"4\">\n        <el-card class=\"box-card pending-card\">\n          <div class=\"card-content\">\n            <div class=\"stat-title\">待处理任务</div>\n            <div class=\"stat-value\">{{ statistics.pendingTasks }}</div>\n            <div class=\"stat-action\">\n              <el-button type=\"text\" class=\"pending-btn\" @click=\"$router.push('/tasks')\">查看详情</el-button>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"4\">\n        <el-card class=\"box-card completed-card\">\n          <div class=\"card-content\">\n            <div class=\"stat-title\">已完成任务</div>\n            <div class=\"stat-value\">{{ statistics.completedTasks }}</div>\n            <div class=\"stat-action\">\n              <el-button type=\"text\" class=\"completed-btn\" @click=\"$router.push('/tasks')\">查看详情</el-button>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"8\">\n        <el-card class=\"box-card dept-card\">\n          <div class=\"dept-content\" v-if=\"department\">\n            <div class=\"dept-header\">\n              <i class=\"el-icon-office-building\"></i>\n              <span class=\"dept-name\">{{ department.deptName }}</span>\n            </div>\n            <div class=\"dept-info-row\">\n              <div class=\"info-item\">\n                <i class=\"el-icon-user\"></i>\n                <span>{{ department.manager ? department.manager.name : '暂无' }}</span>\n                <div class=\"info-label\">部门经理</div>\n              </div>\n              <div class=\"info-item\">\n                <i class=\"el-icon-user-solid\"></i>\n                <span>{{ departmentUsers.length }}</span>\n                <div class=\"info-label\">部门人数</div>\n              </div>\n            </div>\n          </div>\n          <div v-else class=\"empty-text\">暂无部门信息</div>\n        </el-card>\n      </el-col>\n    </el-row>\n    \n    <el-row :gutter=\"20\" style=\"margin-top: 20px\">\n      <el-col :span=\"24\">\n        <el-card class=\"box-card\">\n          <div slot=\"header\">\n            <span>任务完成情况</span>\n          </div>\n          <div class=\"chart-container\">\n            <el-progress \n              type=\"circle\" \n              :percentage=\"completionRate\" \n              :width=\"150\"\n              :stroke-width=\"10\"\n              :color=\"customColors\">\n              <template #default=\"{ percentage }\">\n                <span class=\"progress-label\">\n                  完成率<br/>{{ percentage }}%\n                </span>\n              </template>\n            </el-progress>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport api from '../api'\nimport { formatDate } from '../utils/date'\n\nexport default {\n  name: 'Dashboard',\n  data() {\n    return {\n      unreadMessages: [],\n      todayTasks: [],\n      department: null,\n      departmentUsers: [],\n      loading: false,\n      statistics: {\n        unreadMessages: 0,\n        monthlyTasks: 0,\n        pendingTasks: 0,\n        completedTasks: 0,\n        totalTasks: 0\n      }\n    }\n  },\n  created() {\n    this.fetchData()\n  },\n  methods: {\n    formatDate,\n    async fetchData() {\n      this.loading = true\n      try {\n        const [tasks, messages] = await Promise.all([\n          api.getMyTasks(),\n          api.getMessages()\n        ])\n        \n        this.todayTasks = tasks.filter(task => task.dueDate && task.dueDate.startsWith(this.today))\n        \n        this.unreadMessages = messages.filter(msg => msg && !msg.isRead)\n        \n        // 获取当前月份\n        const now = new Date()\n        const currentMonth = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}`\n        \n        // 统计数据\n        this.statistics = {\n          totalTasks: tasks.length,\n          monthlyTasks: tasks.filter(task => task.dueDate && task.dueDate.startsWith(currentMonth)).length,\n          pendingTasks: tasks.filter(task => task && task.status === 0).length,\n          completedTasks: tasks.filter(task => task && task.status === 2).length,\n          unreadMessages: this.unreadMessages.length\n        }\n        \n        if (this.$store.getters.currentUser.deptId) {\n          const [dept, users] = await Promise.all([\n            api.getDepartments(),\n            api.getUsers()\n          ])\n          console.log('部门列表:', dept)\n          console.log('当前用户部门ID:', this.$store.getters.currentUser.deptId)\n          const department = dept.find(d => d.deptId === this.$store.getters.currentUser.deptId)\n          console.log('找到的部门:', department)\n          this.department = department\n          this.departmentUsers = users.filter(u => u.deptId === this.$store.getters.currentUser.deptId)\n        }\n      } catch (error) {\n        console.error('获取数据失败:', error)\n        this.$message.error('获取数据失败')\n      } finally {\n        this.loading = false\n      }\n    }\n  },\n  computed: {\n    today() {\n      const now = new Date()\n      return `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')}`\n    },\n    completionRate() {\n      if (this.statistics.totalTasks === 0) return 0\n      return Math.round((this.statistics.completedTasks / this.statistics.totalTasks) * 100)\n    },\n    customColors: [\n      {color: '#f56c6c', percentage: 20},\n      {color: '#e6a23c', percentage: 40},\n      {color: '#5cb87a', percentage: 60},\n      {color: '#1989fa', percentage: 80},\n      {color: '#67c23a', percentage: 100}\n    ]\n  },\n  getStatusText(status) {\n    if (status === null || status === undefined) return '未知'\n    const texts = {\n      0: '待处理',\n      1: '进行中',\n      2: '已完成'\n    }\n    return texts[status] ?? '未知'\n  },\n  getStatusType(status) {\n    if (status === null || status === undefined) return ''\n    const types = {\n      0: 'info',\n      1: 'warning',\n      2: 'success'\n    }\n    return types[status] ?? ''\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard {\n  padding: 20px;\n  background-color: #f5f7fa;\n}\n\n.box-card {\n  margin-bottom: 20px;\n  height: 100%;\n  transition: all 0.3s;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 2px 12px 0 rgba(0,0,0,.1);\n  }\n}\n\n.message-card {\n  background: linear-gradient(135deg, #e0f2f1 0%, #b2dfdb 100%);\n  .stat-value { color: #009688; }\n  .message-btn { color: #00796b; }\n}\n\n.monthly-card {\n  background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);\n  .stat-value { color: #1976d2; }\n  .monthly-btn { color: #1565c0; }\n}\n\n.pending-card {\n  background: linear-gradient(135deg, #fff3e0 0%, #ffe0b2 100%);\n  .stat-value { color: #f57c00; }\n  .pending-btn { color: #ef6c00; }\n}\n\n.completed-card {\n  background: linear-gradient(135deg, #e8f5e9 0%, #c8e6c9 100%);\n  .stat-value { color: #43a047; }\n  .completed-btn { color: #2e7d32; }\n}\n\n.card-content {\n  text-align: center;\n  padding: 20px 0;\n}\n\n.stat-title {\n  font-size: 16px;\n  color: #37474f;\n  margin-bottom: 15px;\n  font-weight: 500;\n}\n\n.stat-value {\n  font-size: 36px;\n  font-weight: bold;\n  margin-bottom: 15px;\n  text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n}\n\n.stat-action {\n  margin-top: 10px;\n  \n  .el-button {\n    font-weight: 500;\n    &:hover {\n      opacity: 0.8;\n    }\n  }\n}\n\n.chart-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  min-height: 200px;\n}\n\n.progress-label {\n  font-size: 14px;\n  text-align: center;\n  color: #606266;\n  line-height: 1.5;\n  font-weight: 500;\n}\n\n.dept-card {\n  background: linear-gradient(135deg, #f3e5f5 0%, #e1bee7 100%);\n  \n  .dept-content {\n    padding: 10px;\n  }\n  \n  .dept-header {\n    display: flex;\n    align-items: center;\n    margin-bottom: 15px;\n    \n    i {\n      font-size: 24px;\n      color: #7b1fa2;\n      margin-right: 10px;\n    }\n    \n    .dept-name {\n      font-size: 18px;\n      font-weight: 500;\n      color: #4a148c;\n    }\n  }\n  \n  .dept-info-row {\n    display: flex;\n    justify-content: space-around;\n    \n    .info-item {\n      text-align: center;\n      padding: 10px;\n      \n      i {\n        font-size: 24px;\n        color: #7b1fa2;\n        margin-bottom: 5px;\n      }\n      \n      span {\n        display: block;\n        font-size: 16px;\n        font-weight: 500;\n        color: #4a148c;\n        margin: 5px 0;\n      }\n      \n      .info-label {\n        font-size: 12px;\n        color: #6a1b9a;\n      }\n    }\n  }\n}\n\n.empty-text {\n  text-align: center;\n  color: #999;\n  padding: 20px 0;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}