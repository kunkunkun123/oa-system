{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport store from '../store';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/login',\n  name: 'Login',\n  component: () => import('../views/Login.vue'),\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/',\n  redirect: '/dashboard',\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/dashboard',\n  name: 'Dashboard',\n  component: () => import('../views/Dashboard.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/messages',\n  name: 'Messages',\n  component: () => import('../views/Messages.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/tasks',\n  name: 'Tasks',\n  component: () => import('../views/Tasks.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/departments',\n  name: 'Departments',\n  component: () => import('../views/Departments.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}, {\n  path: '/users',\n  name: 'Users',\n  component: () => import('../views/Users.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!store.getters.isLoggedIn) {\n      next('/login');\n      return;\n    }\n    if (to.matched.some(record => record.meta.requiresAdmin) && !store.getters.isAdmin) {\n      next('/dashboard');\n      return;\n    }\n  }\n  next();\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","store","use","routes","path","name","component","meta","requiresAuth","redirect","requiresAdmin","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","getters","isLoggedIn","isAdmin"],"sources":["D:/oasystem/src/main/resources/static/frontend/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport store from '../store'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/login',\n    name: 'Login',\n    component: () => import('../views/Login.vue'),\n    meta: { requiresAuth: false }\n  },\n  {\n    path: '/',\n    redirect: '/dashboard',\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/dashboard',\n    name: 'Dashboard',\n    component: () => import('../views/Dashboard.vue'),\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/messages',\n    name: 'Messages',\n    component: () => import('../views/Messages.vue'),\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/tasks',\n    name: 'Tasks',\n    component: () => import('../views/Tasks.vue'),\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/departments',\n    name: 'Departments',\n    component: () => import('../views/Departments.vue'),\n    meta: { requiresAuth: true, requiresAdmin: true }\n  },\n  {\n    path: '/users',\n    name: 'Users',\n    component: () => import('../views/Users.vue'),\n    meta: { requiresAuth: true, requiresAdmin: true }\n  }\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!store.getters.isLoggedIn) {\n      next('/login')\n      return\n    }\n    if (to.matched.some(record => record.meta.requiresAdmin) && !store.getters.isAdmin) {\n      next('/dashboard')\n      return\n    }\n  }\n  next()\n})\n\nexport default router "],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,UAAU;AAE5BF,GAAG,CAACG,GAAG,CAACF,SAAS,CAAC;AAElB,MAAMG,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,oBAAoB,CAAC;EAC7CC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAM;AAC9B,CAAC,EACD;EACEJ,IAAI,EAAE,GAAG;EACTK,QAAQ,EAAE,YAAY;EACtBF,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,wBAAwB,CAAC;EACjDC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,uBAAuB,CAAC;EAChDC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,oBAAoB,CAAC;EAC7CC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,0BAA0B,CAAC;EACnDC,IAAI,EAAE;IAAEC,YAAY,EAAE,IAAI;IAAEE,aAAa,EAAE;EAAK;AAClD,CAAC,EACD;EACEN,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,oBAAoB,CAAC;EAC7CC,IAAI,EAAE;IAAEC,YAAY,EAAE,IAAI;IAAEE,aAAa,EAAE;EAAK;AAClD,CAAC,CACF;AAED,MAAMC,MAAM,GAAG,IAAIX,SAAS,CAAC;EAC3BY,IAAI,EAAE,SAAS;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAC1Bb;AACF,CAAC,CAAC;AAEFQ,MAAM,CAACM,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAAChB,IAAI,CAACC,YAAY,CAAC,EAAE;IACvD,IAAI,CAACP,KAAK,CAACuB,OAAO,CAACC,UAAU,EAAE;MAC7BL,IAAI,CAAC,QAAQ,CAAC;MACd;IACF;IACA,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAAChB,IAAI,CAACG,aAAa,CAAC,IAAI,CAACT,KAAK,CAACuB,OAAO,CAACE,OAAO,EAAE;MAClFN,IAAI,CAAC,YAAY,CAAC;MAClB;IACF;EACF;EACAA,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;AAEF,eAAeT,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}