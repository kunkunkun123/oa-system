{"ast":null,"code":"export default {\n  name: 'Login',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      loading: false\n    };\n  },\n  methods: {\n    handleLogin() {\n      this.$refs.loginForm.validate(async valid => {\n        if (valid) {\n          this.loading = true;\n          try {\n            await this.$store.dispatch('login', this.loginForm);\n            this.$router.push('/dashboard');\n          } catch (error) {\n            this.$message.error(error.message);\n          } finally {\n            this.loading = false;\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","loginForm","username","password","rules","required","message","trigger","loading","methods","handleLogin","$refs","validate","valid","$store","dispatch","$router","push","error","$message"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <el-card class=\"login-card\">\n      <div slot=\"header\">\n        <span>系统登录</span>\n      </div>\n      <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"loginForm\">\n        <el-form-item prop=\"username\">\n          <el-input\n            v-model=\"loginForm.username\"\n            prefix-icon=\"el-icon-user\"\n            placeholder=\"用户名\">\n          </el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            prefix-icon=\"el-icon-lock\"\n            type=\"password\"\n            placeholder=\"密码\">\n          </el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleLogin\" :loading=\"loading\" block>\n            登录\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ]\n      },\n      loading: false\n    }\n  },\n  methods: {\n    handleLogin() {\n      this.$refs.loginForm.validate(async valid => {\n        if (valid) {\n          this.loading = true\n          try {\n            await this.$store.dispatch('login', this.loginForm)\n            this.$router.push('/dashboard')\n          } catch (error) {\n            this.$message.error(error.message)\n          } finally {\n            this.loading = false\n          }\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.login-container {\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #f5f7fa;\n}\n\n.login-card {\n  width: 400px;\n}\n</style> "],"mappings":"AAiCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACA,KAAAC,KAAA,CAAAV,SAAA,CAAAW,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAL,OAAA;UACA;YACA,WAAAM,MAAA,CAAAC,QAAA,eAAAd,SAAA;YACA,KAAAe,OAAA,CAAAC,IAAA;UACA,SAAAC,KAAA;YACA,KAAAC,QAAA,CAAAD,KAAA,CAAAA,KAAA,CAAAZ,OAAA;UACA;YACA,KAAAE,OAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}