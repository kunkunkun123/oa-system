{"ast":null,"code":"import axios from 'axios';\nimport { Message } from 'element-ui';\nimport store from '@/store';\nimport router from '@/router';\n\n// 创建 axios 实例\nconst service = axios.create({\n  baseURL: '/api',\n  // API 的基础URL\n  timeout: 15000 // 增加超时时间到 15 秒\n});\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  const token = store.getters.token || localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = 'Bearer ' + token;\n  }\n  return config;\n}, error => {\n  console.log(error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(response => {\n  return response.data; // 直接返回响应数据\n}, error => {\n  console.log('API Error:', error);\n  if (error.code === 'ECONNABORTED' && error.message.includes('timeout')) {\n    Message.error('请求超时，请检查网络连接');\n  } else if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        store.dispatch('logout');\n        Message.error('登录已过期，请重新登录');\n        break;\n      case 403:\n        Message.error('没有权限执行此操作');\n        break;\n      case 404:\n        Message.error('请求的资源不存在');\n        break;\n      case 500:\n        Message.error('服务器内部错误');\n        break;\n      default:\n        Message.error(error.response.data?.message || '请求失败');\n    }\n  } else {\n    Message.error('网络错误，请检查网络连接');\n  }\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","Message","store","router","service","create","baseURL","timeout","interceptors","request","use","config","token","getters","localStorage","getItem","headers","error","console","log","Promise","reject","response","data","code","message","includes","status","dispatch"],"sources":["D:/oasystem/src/main/resources/static/frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport { Message } from 'element-ui'\nimport store from '@/store'\nimport router from '@/router'\n\n// 创建 axios 实例\nconst service = axios.create({\n  baseURL: '/api', // API 的基础URL\n  timeout: 15000  // 增加超时时间到 15 秒\n})\n\n// 请求拦截器\nservice.interceptors.request.use(\n  config => {\n    const token = store.getters.token || localStorage.getItem('token')\n    if (token) {\n      config.headers['Authorization'] = 'Bearer ' + token\n    }\n    return config\n  },\n  error => {\n    console.log(error)\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\nservice.interceptors.response.use(\n  response => {\n    return response.data  // 直接返回响应数据\n  },\n  error => {\n    console.log('API Error:', error)\n    \n    if (error.code === 'ECONNABORTED' && error.message.includes('timeout')) {\n      Message.error('请求超时，请检查网络连接')\n    } else if (error.response) {\n      switch (error.response.status) {\n        case 401:\n          store.dispatch('logout')\n          Message.error('登录已过期，请重新登录')\n          break\n        case 403:\n          Message.error('没有权限执行此操作')\n          break\n        case 404:\n          Message.error('请求的资源不存在')\n          break\n        case 500:\n          Message.error('服务器内部错误')\n          break\n        default:\n          Message.error(error.response.data?.message || '请求失败')\n      }\n    } else {\n      Message.error('网络错误，请检查网络连接')\n    }\n    \n    return Promise.reject(error)\n  }\n)\n\nexport default service "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,YAAY;AACpC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AACA,MAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAM,CAAC;EAC3BC,OAAO,EAAE,MAAM;EAAE;EACjBC,OAAO,EAAE,KAAK,CAAE;AAClB,CAAC,CAAC;;AAEF;AACAH,OAAO,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAI;EACR,MAAMC,KAAK,GAAGV,KAAK,CAACW,OAAO,CAACD,KAAK,IAAIE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAClE,IAAIH,KAAK,EAAE;IACTD,MAAM,CAACK,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGJ,KAAK;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACDM,KAAK,IAAI;EACPC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,OAAO,CAACI,YAAY,CAACc,QAAQ,CAACZ,GAAG,CAC/BY,QAAQ,IAAI;EACV,OAAOA,QAAQ,CAACC,IAAI,EAAE;AACxB,CAAC,EACDN,KAAK,IAAI;EACPC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,KAAK,CAAC;EAEhC,IAAIA,KAAK,CAACO,IAAI,KAAK,cAAc,IAAIP,KAAK,CAACQ,OAAO,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;IACtEzB,OAAO,CAACgB,KAAK,CAAC,cAAc,CAAC;EAC/B,CAAC,MAAM,IAAIA,KAAK,CAACK,QAAQ,EAAE;IACzB,QAAQL,KAAK,CAACK,QAAQ,CAACK,MAAM;MAC3B,KAAK,GAAG;QACNzB,KAAK,CAAC0B,QAAQ,CAAC,QAAQ,CAAC;QACxB3B,OAAO,CAACgB,KAAK,CAAC,aAAa,CAAC;QAC5B;MACF,KAAK,GAAG;QACNhB,OAAO,CAACgB,KAAK,CAAC,WAAW,CAAC;QAC1B;MACF,KAAK,GAAG;QACNhB,OAAO,CAACgB,KAAK,CAAC,UAAU,CAAC;QACzB;MACF,KAAK,GAAG;QACNhB,OAAO,CAACgB,KAAK,CAAC,SAAS,CAAC;QACxB;MACF;QACEhB,OAAO,CAACgB,KAAK,CAACA,KAAK,CAACK,QAAQ,CAACC,IAAI,EAAEE,OAAO,IAAI,MAAM,CAAC;IACzD;EACF,CAAC,MAAM;IACLxB,OAAO,CAACgB,KAAK,CAAC,cAAc,CAAC;EAC/B;EAEA,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}