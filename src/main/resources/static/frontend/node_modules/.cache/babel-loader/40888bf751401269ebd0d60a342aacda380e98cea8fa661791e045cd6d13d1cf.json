{"ast":null,"code":"import axios from 'axios';\nimport store from '../store';\nimport router from '../router';\nimport { Message } from 'element-ui';\n\n// 创建 axios 实例\nconst api = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API || '/api',\n  timeout: 5000\n});\n\n// 请求拦截器\napi.interceptors.request.use(config => {\n  const token = store.state.token;\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  // 添加调试日志\n  console.log('Request config:', config);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 响应拦截器\napi.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  console.error('API Error:', error.response);\n  if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        store.dispatch('logout');\n        router.push('/login');\n        Message.error('登录已过期，请重新登录');\n        break;\n      case 403:\n        Message.error('没有权限执行此操作');\n        break;\n      default:\n        Message.error(error.response.data?.message || '服务器错误');\n    }\n  } else {\n    Message.error('网络错误');\n  }\n  return Promise.reject(error);\n});\nexport default {\n  // 用户相关\n  login: data => api.post('/users/login', data),\n  register: data => {\n    // 在这里添加数据转换\n    const convertedData = {\n      ...data,\n      name: data.realName // 如果存在这样的转换，需要删除\n    };\n    console.log('API register 方法接收到的数据:', data);\n    return api.post('/users/register', data);\n  },\n  updatePassword: data => api.put('/users/password', data),\n  getUsers: () => api.get('/users'),\n  // 消息相关\n  getMessages: () => api.get('/messages/my'),\n  getSentMessages: () => api.get('/messages/sent'),\n  sendMessage: data => api.post('/messages', data),\n  sendDepartmentMessage: (deptId, data) => api.post(`/messages/department/${deptId}`, data),\n  markMessageAsRead: messageId => {\n    if (!messageId) {\n      return Promise.reject(new Error('消息ID不能为空'));\n    }\n    return api.put(`/messages/${messageId}/read`);\n  },\n  // 任务相关\n  getTasks: () => api.get('/tasks/my'),\n  getDepartmentTasks: deptId => api.get(`/tasks/department/${deptId}`),\n  createTask: data => api.post('/tasks', data),\n  updateTaskStatus: (taskId, status) => api.put(`/tasks/${taskId}/status`, {\n    status\n  }),\n  // 部门相关\n  getDepartments: () => api.get('/departments'),\n  createDepartment: data => api.post('/departments', data),\n  updateDepartment: (deptId, data) => api.put(`/departments/${deptId}`, data),\n  deleteDepartment: deptId => api.delete(`/departments/${deptId}`),\n  assignManager: (deptId, managerId) => api.put(`/departments/${deptId}/manager/${managerId}`)\n};","map":{"version":3,"names":["axios","store","router","Message","api","create","baseURL","process","env","VUE_APP_BASE_API","timeout","interceptors","request","use","config","token","state","headers","console","log","error","Promise","reject","response","data","status","dispatch","push","message","login","post","register","convertedData","name","realName","updatePassword","put","getUsers","get","getMessages","getSentMessages","sendMessage","sendDepartmentMessage","deptId","markMessageAsRead","messageId","Error","getTasks","getDepartmentTasks","createTask","updateTaskStatus","taskId","getDepartments","createDepartment","updateDepartment","deleteDepartment","delete","assignManager","managerId"],"sources":["D:/oasystem/src/main/resources/static/frontend/src/api/index.js"],"sourcesContent":["import axios from 'axios'\nimport store from '../store'\nimport router from '../router'\nimport { Message } from 'element-ui'\n\n// 创建 axios 实例\nconst api = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API || '/api',\n  timeout: 5000\n})\n\n// 请求拦截器\napi.interceptors.request.use(\n  config => {\n    const token = store.state.token\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`\n    }\n    // 添加调试日志\n    console.log('Request config:', config)\n    return config\n  },\n  error => {\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\napi.interceptors.response.use(\n  response => {\n    return response.data\n  },\n  error => {\n    console.error('API Error:', error.response)\n    if (error.response) {\n      switch (error.response.status) {\n        case 401:\n          store.dispatch('logout')\n          router.push('/login')\n          Message.error('登录已过期，请重新登录')\n          break\n        case 403:\n          Message.error('没有权限执行此操作')\n          break\n        default:\n          Message.error(error.response.data?.message || '服务器错误')\n      }\n    } else {\n      Message.error('网络错误')\n    }\n    return Promise.reject(error)\n  }\n)\n\nexport default {\n  // 用户相关\n  login: data => api.post('/users/login', data),\n  register: data => {\n    // 在这里添加数据转换\n    const convertedData = {\n      ...data,\n      name: data.realName,  // 如果存在这样的转换，需要删除\n    };\n    console.log('API register 方法接收到的数据:', data)\n    return api.post('/users/register', data)\n  },\n  updatePassword: data => api.put('/users/password', data),\n  getUsers: () => api.get('/users'),\n  \n  // 消息相关\n  getMessages: () => api.get('/messages/my'),\n  getSentMessages: () => api.get('/messages/sent'),\n  sendMessage: data => api.post('/messages', data),\n  sendDepartmentMessage: (deptId, data) => api.post(`/messages/department/${deptId}`, data),\n  markMessageAsRead: messageId => {\n    if (!messageId) {\n      return Promise.reject(new Error('消息ID不能为空'))\n    }\n    return api.put(`/messages/${messageId}/read`)\n  },\n  \n  // 任务相关\n  getTasks: () => api.get('/tasks/my'),\n  getDepartmentTasks: deptId => api.get(`/tasks/department/${deptId}`),\n  createTask: data => api.post('/tasks', data),\n  updateTaskStatus: (taskId, status) => api.put(`/tasks/${taskId}/status`, { status }),\n  \n  // 部门相关\n  getDepartments: () => api.get('/departments'),\n  createDepartment: data => api.post('/departments', data),\n  updateDepartment: (deptId, data) => api.put(`/departments/${deptId}`, data),\n  deleteDepartment: deptId => api.delete(`/departments/${deptId}`),\n  assignManager: (deptId, managerId) => api.put(`/departments/${deptId}/manager/${managerId}`)\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}