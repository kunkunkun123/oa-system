{"ast":null,"code":"import axios from 'axios';\nimport { Message } from 'element-ui';\nimport store from '@/store';\nimport router from '@/router';\n\n// 创建 axios 实例\nconst service = axios.create({\n  baseURL: '/api',\n  // API 的基础URL\n  timeout: 15000,\n  // 增加超时时间到 15 秒\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  // 添加请求日志\n  console.log('发送请求:', config.url, config.data);\n  const token = store.getters.token || localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = 'Bearer ' + token;\n  }\n  return config;\n}, error => {\n  console.error('请求错误:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  console.error('响应错误:', error);\n  if (error.code === 'ECONNABORTED' && error.message.includes('timeout')) {\n    Message.error('请求超时，请检查网络连接');\n  } else if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        Message.error('未授权，请重新登录');\n        store.dispatch('logout');\n        break;\n      case 403:\n        Message.error('没有权限执行此操作');\n        break;\n      case 404:\n        Message.error('请求的资源不存在');\n        break;\n      case 500:\n        Message.error('服务器内部错误');\n        break;\n      default:\n        Message.error(error.response.data?.message || '请求失败');\n    }\n  } else {\n    Message.error('网络错误，请检查网络连接');\n  }\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","Message","store","router","service","create","baseURL","timeout","headers","interceptors","request","use","config","console","log","url","data","token","getters","localStorage","getItem","error","Promise","reject","response","code","message","includes","status","dispatch"],"sources":["D:/oasystem/src/main/resources/static/frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport { Message } from 'element-ui'\nimport store from '@/store'\nimport router from '@/router'\n\n// 创建 axios 实例\nconst service = axios.create({\n  baseURL: '/api', // API 的基础URL\n  timeout: 15000,  // 增加超时时间到 15 秒\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\n// 请求拦截器\nservice.interceptors.request.use(\n  config => {\n    // 添加请求日志\n    console.log('发送请求:', config.url, config.data)\n    \n    const token = store.getters.token || localStorage.getItem('token')\n    if (token) {\n      config.headers['Authorization'] = 'Bearer ' + token\n    }\n    return config\n  },\n  error => {\n    console.error('请求错误:', error)\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\nservice.interceptors.response.use(\n  response => {\n    return response.data\n  },\n  error => {\n    console.error('响应错误:', error)\n    if (error.code === 'ECONNABORTED' && error.message.includes('timeout')) {\n      Message.error('请求超时，请检查网络连接')\n    } else if (error.response) {\n      switch (error.response.status) {\n        case 401:\n          Message.error('未授权，请重新登录')\n          store.dispatch('logout')\n          break\n        case 403:\n          Message.error('没有权限执行此操作')\n          break\n        case 404:\n          Message.error('请求的资源不存在')\n          break\n        case 500:\n          Message.error('服务器内部错误')\n          break\n        default:\n          Message.error(error.response.data?.message || '请求失败')\n      }\n    } else {\n      Message.error('网络错误，请检查网络连接')\n    }\n    return Promise.reject(error)\n  }\n)\n\nexport default service "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,YAAY;AACpC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AACA,MAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAM,CAAC;EAC3BC,OAAO,EAAE,MAAM;EAAE;EACjBC,OAAO,EAAE,KAAK;EAAG;EACjBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,OAAO,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAI;EACR;EACAC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,MAAM,CAACG,GAAG,EAAEH,MAAM,CAACI,IAAI,CAAC;EAE7C,MAAMC,KAAK,GAAGf,KAAK,CAACgB,OAAO,CAACD,KAAK,IAAIE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAClE,IAAIH,KAAK,EAAE;IACTL,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGS,KAAK;EACrD;EACA,OAAOL,MAAM;AACf,CAAC,EACDS,KAAK,IAAI;EACPR,OAAO,CAACQ,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;EAC7B,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAjB,OAAO,CAACK,YAAY,CAACe,QAAQ,CAACb,GAAG,CAC/Ba,QAAQ,IAAI;EACV,OAAOA,QAAQ,CAACR,IAAI;AACtB,CAAC,EACDK,KAAK,IAAI;EACPR,OAAO,CAACQ,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;EAC7B,IAAIA,KAAK,CAACI,IAAI,KAAK,cAAc,IAAIJ,KAAK,CAACK,OAAO,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;IACtE1B,OAAO,CAACoB,KAAK,CAAC,cAAc,CAAC;EAC/B,CAAC,MAAM,IAAIA,KAAK,CAACG,QAAQ,EAAE;IACzB,QAAQH,KAAK,CAACG,QAAQ,CAACI,MAAM;MAC3B,KAAK,GAAG;QACN3B,OAAO,CAACoB,KAAK,CAAC,WAAW,CAAC;QAC1BnB,KAAK,CAAC2B,QAAQ,CAAC,QAAQ,CAAC;QACxB;MACF,KAAK,GAAG;QACN5B,OAAO,CAACoB,KAAK,CAAC,WAAW,CAAC;QAC1B;MACF,KAAK,GAAG;QACNpB,OAAO,CAACoB,KAAK,CAAC,UAAU,CAAC;QACzB;MACF,KAAK,GAAG;QACNpB,OAAO,CAACoB,KAAK,CAAC,SAAS,CAAC;QACxB;MACF;QACEpB,OAAO,CAACoB,KAAK,CAACA,KAAK,CAACG,QAAQ,CAACR,IAAI,EAAEU,OAAO,IAAI,MAAM,CAAC;IACzD;EACF,CAAC,MAAM;IACLzB,OAAO,CAACoB,KAAK,CAAC,cAAc,CAAC;EAC/B;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAejB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}