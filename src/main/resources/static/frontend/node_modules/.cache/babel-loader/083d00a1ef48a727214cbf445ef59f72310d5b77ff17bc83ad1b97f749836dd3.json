{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport leaveApi from '@/api/leave';\nimport { formatDate } from '@/utils/date';\nexport default {\n  name: 'LeaveList',\n  data() {\n    return {\n      activeTab: 'my',\n      loading: false,\n      myLeaves: [],\n      pendingLeaves: [],\n      createDialogVisible: false,\n      detailDialogVisible: false,\n      approvalDialogVisible: false,\n      submitting: false,\n      currentLeave: null,\n      approvalAction: 1,\n      // 1: 同意, 2: 拒绝\n\n      leaveForm: {\n        type: null,\n        startTime: null,\n        endTime: null,\n        reason: ''\n      },\n      approvalForm: {\n        comment: ''\n      },\n      rules: {\n        type: [{\n          required: true,\n          message: '请选择请假类型'\n        }],\n        startTime: [{\n          required: true,\n          message: '请选择开始时间'\n        }],\n        endTime: [{\n          required: true,\n          message: '请选择结束时间'\n        }],\n        reason: [{\n          required: true,\n          message: '请输入请假原因'\n        }]\n      }\n    };\n  },\n  computed: {\n    ...mapGetters(['currentUser']),\n    isManager() {\n      return this.currentUser.roleId === 3; // 3 是部门经理的角色ID\n    }\n  },\n  created() {\n    // 如果是管理员或部门经理，默认显示待审批标签页\n    if (this.currentUser.roleId === 1 || this.currentUser.roleId === 3) {\n      this.activeTab = 'pending';\n    }\n    this.fetchData();\n  },\n  methods: {\n    formatDateTime(time) {\n      if (!time) return '---';\n      return formatDate(time);\n    },\n    async fetchData() {\n      this.loading = true;\n      try {\n        if (this.activeTab === 'my') {\n          console.log('获取我的请假记录');\n          const response = await leaveApi.getMyLeaves();\n          console.log('我的请假记录:', response);\n          this.myLeaves = response;\n        } else if (this.activeTab === 'pending') {\n          console.log('获取待审批请假');\n          const response = await leaveApi.getPendingApprovals();\n          console.log('待审批请假:', response);\n          this.pendingLeaves = response;\n        }\n      } catch (error) {\n        console.error('获取请假记录失败:', error);\n        this.$message.error('获取请假记录失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleTabClick() {\n      console.log('切换标签页:', this.activeTab);\n      console.log('当前用户:', this.currentUser);\n      this.fetchData();\n    },\n    showCreateDialog() {\n      this.createDialogVisible = true;\n      this.$nextTick(() => {\n        this.$refs.leaveForm.resetFields();\n      });\n    },\n    async submitLeave() {\n      try {\n        if (!this.leaveForm.type) {\n          this.$message.warning('请选择请假类型');\n          return;\n        }\n        await this.$refs.leaveForm.validate();\n        this.submitting = true;\n        await leaveApi.createLeave(this.leaveForm);\n        this.$message.success('申请提交成功');\n        this.createDialogVisible = false;\n        this.fetchData();\n      } catch (error) {\n        console.error('提交请假申请失败:', error);\n        this.$message.error(error.response?.data?.message || '提交失败');\n      } finally {\n        this.submitting = false;\n      }\n    },\n    async viewDetail(leave) {\n      try {\n        console.log('查看请假详情, ID:', leave.id);\n        const response = await leaveApi.getLeaveById(leave.id);\n        console.log('请假详情响应:', response);\n        this.currentLeave = response;\n        this.detailDialogVisible = true;\n      } catch (error) {\n        console.error('获取请假详情失败:', error);\n        this.$message.error('获取详情失败');\n      }\n    },\n    approve(leave, action) {\n      this.currentLeave = leave;\n      this.approvalAction = action;\n      this.approvalDialogVisible = true;\n      this.approvalForm.comment = '';\n    },\n    async submitApproval() {\n      try {\n        this.submitting = true;\n        await leaveApi.approveLeave(this.currentLeave.id, {\n          status: this.approvalAction,\n          comment: this.approvalForm.comment\n        });\n        this.$message.success('审批成功');\n        this.approvalDialogVisible = false;\n        this.fetchData();\n      } catch (error) {\n        console.error('审批失败:', error);\n        this.$message.error(error.response?.data?.message || '审批失败');\n      } finally {\n        this.submitting = false;\n      }\n    },\n    getLeaveTypeName(type) {\n      const types = {\n        1: '事假',\n        2: '病假',\n        3: '年假',\n        4: '调休'\n      };\n      return types[type] || '未知';\n    },\n    getStatusName(status) {\n      const statuses = {\n        0: '待审批',\n        1: '审批中',\n        2: '已通过',\n        3: '已拒绝'\n      };\n      return statuses[status] || '未知';\n    },\n    getStatusType(status) {\n      const types = {\n        0: 'warning',\n        1: 'primary',\n        2: 'success',\n        3: 'danger'\n      };\n      return types[status] || 'info';\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","leaveApi","formatDate","name","data","activeTab","loading","myLeaves","pendingLeaves","createDialogVisible","detailDialogVisible","approvalDialogVisible","submitting","currentLeave","approvalAction","leaveForm","type","startTime","endTime","reason","approvalForm","comment","rules","required","message","computed","isManager","currentUser","roleId","created","fetchData","methods","formatDateTime","time","console","log","response","getMyLeaves","getPendingApprovals","error","$message","handleTabClick","showCreateDialog","$nextTick","$refs","resetFields","submitLeave","warning","validate","createLeave","success","viewDetail","leave","id","getLeaveById","approve","action","submitApproval","approveLeave","status","getLeaveTypeName","types","getStatusName","statuses","getStatusType"],"sources":["src/views/leave/LeaveList.vue"],"sourcesContent":["<template>\n  <div class=\"leave-list\">\n    <div class=\"header\">\n      <h2>请假管理</h2>\n      <el-button type=\"primary\" @click=\"showCreateDialog\">申请请假</el-button>\n    </div>\n\n    <el-tabs v-model=\"activeTab\" @tab-click=\"handleTabClick\">\n      <el-tab-pane label=\"我的请假\" name=\"my\">\n        <el-table :data=\"myLeaves\" v-loading=\"loading\">\n          <el-table-column prop=\"type\" label=\"请假类型\">\n            <template slot-scope=\"scope\">\n              {{ getLeaveTypeName(scope.row.type) }}\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"startTime\" label=\"开始时间\">\n            <template slot-scope=\"scope\">\n              {{ formatDateTime(scope.row.startTime) }}\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"endTime\" label=\"结束时间\">\n            <template slot-scope=\"scope\">\n              {{ formatDateTime(scope.row.endTime) }}\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"status\" label=\"状态\">\n            <template slot-scope=\"scope\">\n              <el-tag :type=\"getStatusType(scope.row.status)\">\n                {{ getStatusName(scope.row.status) }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"操作\" width=\"120\">\n            <template slot-scope=\"scope\">\n              <el-button type=\"text\" @click=\"viewDetail(scope.row)\">查看</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-tab-pane>\n\n      <el-tab-pane label=\"待审批\" name=\"pending\" v-if=\"isManager\">\n        <el-table :data=\"pendingLeaves\" v-loading=\"loading\">\n          <el-table-column prop=\"applicant.name\" label=\"申请人\"/>\n          <el-table-column prop=\"type\" label=\"请假类型\">\n            <template slot-scope=\"scope\">\n              {{ getLeaveTypeName(scope.row.type) }}\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"startTime\" label=\"开始时间\">\n            <template slot-scope=\"scope\">\n              {{ formatDateTime(scope.row.startTime) }}\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"endTime\" label=\"结束时间\">\n            <template slot-scope=\"scope\">\n              {{ formatDateTime(scope.row.endTime) }}\n            </template>\n          </el-table-column>\n          <el-table-column label=\"操作\" width=\"200\">\n            <template slot-scope=\"scope\">\n              <el-button type=\"text\" @click=\"viewDetail(scope.row)\">查看</el-button>\n              <el-button type=\"text\" @click=\"approve(scope.row, 1)\">同意</el-button>\n              <el-button type=\"text\" @click=\"approve(scope.row, 2)\">拒绝</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-tab-pane>\n    </el-tabs>\n\n    <!-- 创建请假对话框 -->\n    <el-dialog title=\"申请请假\" :visible.sync=\"createDialogVisible\" width=\"500px\">\n      <el-form :model=\"leaveForm\" :rules=\"rules\" ref=\"leaveForm\" label-width=\"100px\">\n        <el-form-item label=\"请假类型\" prop=\"type\">\n          <el-select v-model=\"leaveForm.type\" placeholder=\"请选择请假类型\">\n            <el-option label=\"事假\" :value=\"1\"/>\n            <el-option label=\"病假\" :value=\"2\"/>\n            <el-option label=\"年假\" :value=\"3\"/>\n            <el-option label=\"调休\" :value=\"4\"/>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"开始时间\" prop=\"startTime\">\n          <el-date-picker\n            v-model=\"leaveForm.startTime\"\n            type=\"datetime\"\n            placeholder=\"选择开始时间\">\n          </el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"结束时间\" prop=\"endTime\">\n          <el-date-picker\n            v-model=\"leaveForm.endTime\"\n            type=\"datetime\"\n            placeholder=\"选择结束时间\">\n          </el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"请假原因\" prop=\"reason\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"leaveForm.reason\"\n            :rows=\"3\"\n            placeholder=\"请输入请假原因\">\n          </el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\">\n        <el-button @click=\"createDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitLeave\" :loading=\"submitting\">提交</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 请假详情对话框 -->\n    <el-dialog title=\"请假详情\" :visible.sync=\"detailDialogVisible\" width=\"600px\">\n      <div v-if=\"currentLeave\" class=\"leave-detail\">\n        <div class=\"detail-item\">\n          <span class=\"label\">申请人：</span>\n          <span>{{ currentLeave.applicant?.name }}</span>\n        </div>\n        <div class=\"detail-item\">\n          <span class=\"label\">请假类型：</span>\n          <span>{{ getLeaveTypeName(currentLeave.type) }}</span>\n        </div>\n        <div class=\"detail-item\">\n          <span class=\"label\">开始时间：</span>\n          <span>{{ formatDateTime(currentLeave.startTime) }}</span>\n        </div>\n        <div class=\"detail-item\">\n          <span class=\"label\">结束时间：</span>\n          <span>{{ formatDateTime(currentLeave.endTime) }}</span>\n        </div>\n        <div class=\"detail-item\">\n          <span class=\"label\">请假原因：</span>\n          <span>{{ currentLeave.reason }}</span>\n        </div>\n        <div class=\"detail-item\">\n          <span class=\"label\">状态：</span>\n          <el-tag :type=\"getStatusType(currentLeave.status)\">\n            {{ getStatusName(currentLeave.status) }}\n          </el-tag>\n        </div>\n      </div>\n    </el-dialog>\n\n    <!-- 审批对话框 -->\n    <el-dialog :title=\"approvalAction === 1 ? '同意请假' : '拒绝请假'\"\n               :visible.sync=\"approvalDialogVisible\"\n               width=\"500px\">\n      <el-form :model=\"approvalForm\" ref=\"approvalForm\" label-width=\"80px\">\n        <el-form-item label=\"审批意见\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"approvalForm.comment\"\n            :rows=\"3\"\n            placeholder=\"请输入审批意见\">\n          </el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\">\n        <el-button @click=\"approvalDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitApproval\" :loading=\"submitting\">\n          确定\n        </el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport leaveApi from '@/api/leave'\nimport { formatDate } from '@/utils/date'\n\nexport default {\n  name: 'LeaveList',\n  \n  data() {\n    return {\n      activeTab: 'my',\n      loading: false,\n      myLeaves: [],\n      pendingLeaves: [],\n      createDialogVisible: false,\n      detailDialogVisible: false,\n      approvalDialogVisible: false,\n      submitting: false,\n      currentLeave: null,\n      approvalAction: 1,  // 1: 同意, 2: 拒绝\n      \n      leaveForm: {\n        type: null,\n        startTime: null,\n        endTime: null,\n        reason: ''\n      },\n      \n      approvalForm: {\n        comment: ''\n      },\n      \n      rules: {\n        type: [{ required: true, message: '请选择请假类型' }],\n        startTime: [{ required: true, message: '请选择开始时间' }],\n        endTime: [{ required: true, message: '请选择结束时间' }],\n        reason: [{ required: true, message: '请输入请假原因' }]\n      }\n    }\n  },\n  \n  computed: {\n    ...mapGetters(['currentUser']),\n    isManager() {\n      return this.currentUser.roleId === 3  // 3 是部门经理的角色ID\n    }\n  },\n  \n  created() {\n    // 如果是管理员或部门经理，默认显示待审批标签页\n    if (this.currentUser.roleId === 1 || this.currentUser.roleId === 3) {\n      this.activeTab = 'pending'\n    }\n    this.fetchData()\n  },\n  \n  methods: {\n    formatDateTime(time) {\n      if (!time) return '---'\n      return formatDate(time)\n    },\n    \n    async fetchData() {\n      this.loading = true\n      try {\n        if (this.activeTab === 'my') {\n          console.log('获取我的请假记录');\n          const response = await leaveApi.getMyLeaves();\n          console.log('我的请假记录:', response);\n          this.myLeaves = response;\n        } else if (this.activeTab === 'pending') {\n          console.log('获取待审批请假');\n          const response = await leaveApi.getPendingApprovals();\n          console.log('待审批请假:', response);\n          this.pendingLeaves = response;\n        }\n      } catch (error) {\n        console.error('获取请假记录失败:', error);\n        this.$message.error('获取请假记录失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    handleTabClick() {\n      console.log('切换标签页:', this.activeTab)\n      console.log('当前用户:', this.currentUser)\n      this.fetchData()\n    },\n    \n    showCreateDialog() {\n      this.createDialogVisible = true\n      this.$nextTick(() => {\n        this.$refs.leaveForm.resetFields()\n      })\n    },\n    \n    async submitLeave() {\n      try {\n        if (!this.leaveForm.type) {\n          this.$message.warning('请选择请假类型');\n          return;\n        }\n        await this.$refs.leaveForm.validate()\n        this.submitting = true\n        await leaveApi.createLeave(this.leaveForm)\n        this.$message.success('申请提交成功')\n        this.createDialogVisible = false\n        this.fetchData()\n      } catch (error) {\n        console.error('提交请假申请失败:', error)\n        this.$message.error(error.response?.data?.message || '提交失败')\n      } finally {\n        this.submitting = false\n      }\n    },\n    \n    async viewDetail(leave) {\n      try {\n        console.log('查看请假详情, ID:', leave.id);\n        const response = await leaveApi.getLeaveById(leave.id);\n        console.log('请假详情响应:', response);\n        this.currentLeave = response;\n        this.detailDialogVisible = true;\n      } catch (error) {\n        console.error('获取请假详情失败:', error);\n        this.$message.error('获取详情失败');\n      }\n    },\n    \n    approve(leave, action) {\n      this.currentLeave = leave\n      this.approvalAction = action\n      this.approvalDialogVisible = true\n      this.approvalForm.comment = ''\n    },\n    \n    async submitApproval() {\n      try {\n        this.submitting = true\n        await leaveApi.approveLeave(this.currentLeave.id, {\n          status: this.approvalAction,\n          comment: this.approvalForm.comment\n        })\n        this.$message.success('审批成功')\n        this.approvalDialogVisible = false\n        this.fetchData()\n      } catch (error) {\n        console.error('审批失败:', error)\n        this.$message.error(error.response?.data?.message || '审批失败')\n      } finally {\n        this.submitting = false\n      }\n    },\n    \n    getLeaveTypeName(type) {\n      const types = {\n        1: '事假',\n        2: '病假',\n        3: '年假',\n        4: '调休'\n      }\n      return types[type] || '未知'\n    },\n    \n    getStatusName(status) {\n      const statuses = {\n        0: '待审批',\n        1: '审批中',\n        2: '已通过',\n        3: '已拒绝'\n      }\n      return statuses[status] || '未知'\n    },\n    \n    getStatusType(status) {\n      const types = {\n        0: 'warning',\n        1: 'primary',\n        2: 'success',\n        3: 'danger'\n      }\n      return types[status] || 'info'\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.leave-list {\n  padding: 20px;\n  \n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n    \n    h2 {\n      margin: 0;\n    }\n  }\n}\n\n.leave-detail {\n  .detail-item {\n    margin-bottom: 15px;\n    \n    .label {\n      display: inline-block;\n      width: 80px;\n      color: #606266;\n    }\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}