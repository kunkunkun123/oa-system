{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport store from '../store';\nVue.use(VueRouter);\n\n// 修复路由重复导航错误\nconst originalPush = VueRouter.prototype.push;\nVueRouter.prototype.push = function push(location) {\n  return originalPush.call(this, location).catch(err => err);\n};\nconst originalReplace = VueRouter.prototype.replace;\nVueRouter.prototype.replace = function replace(location) {\n  return originalReplace.call(this, location).catch(err => err);\n};\nconst routes = [{\n  path: '/login',\n  name: 'Login',\n  component: () => import('../views/Login.vue'),\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/',\n  redirect: '/dashboard'\n}, {\n  path: '/dashboard',\n  name: 'Dashboard',\n  component: () => import('../views/Dashboard.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/messages',\n  name: 'Messages',\n  component: () => import('../views/Messages.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/tasks',\n  name: 'Tasks',\n  component: () => import('../views/Tasks.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/departments',\n  name: 'Departments',\n  component: () => import('../views/Departments.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}, {\n  path: '/users',\n  name: 'Users',\n  component: () => import('../views/Users.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\n\n// 路由守卫\nrouter.beforeEach(async (to, from, next) => {\n  console.log('Route guard:', {\n    to,\n    from,\n    isLoggedIn: store.getters.isLoggedIn\n  });\n\n  // 检查路由是否需要认证\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    // 检查用户是否已登录\n    if (!store.getters.isLoggedIn) {\n      next({\n        path: '/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n      return;\n    }\n    // 检查是否需要管理员权限\n    if (to.matched.some(record => record.meta.requiresAdmin)) {\n      if (!store.getters.isAdmin) {\n        next('/dashboard');\n        return;\n      }\n    }\n  }\n\n  // 如果已登录用户访问登录页，重定向到首页\n  if (to.path === '/login' && store.getters.isLoggedIn) {\n    if (from.path === '/dashboard') {\n      next(false);\n    } else {\n      next('/dashboard');\n    }\n    return;\n  }\n  next();\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","store","use","originalPush","prototype","push","location","call","catch","err","originalReplace","replace","routes","path","name","component","meta","requiresAuth","redirect","requiresAdmin","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","console","log","isLoggedIn","getters","matched","some","record","query","fullPath","isAdmin"],"sources":["D:/oasystem/src/main/resources/static/frontend/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport store from '../store'\n\nVue.use(VueRouter)\n\n// 修复路由重复导航错误\nconst originalPush = VueRouter.prototype.push\nVueRouter.prototype.push = function push(location) {\n  return originalPush.call(this, location).catch(err => err)\n}\n\nconst originalReplace = VueRouter.prototype.replace\nVueRouter.prototype.replace = function replace(location) {\n  return originalReplace.call(this, location).catch(err => err)\n}\n\nconst routes = [\n  {\n    path: '/login',\n    name: 'Login',\n    component: () => import('../views/Login.vue'),\n    meta: { requiresAuth: false }\n  },\n  {\n    path: '/',\n    redirect: '/dashboard'\n  },\n  {\n    path: '/dashboard',\n    name: 'Dashboard',\n    component: () => import('../views/Dashboard.vue'),\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/messages',\n    name: 'Messages',\n    component: () => import('../views/Messages.vue'),\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/tasks',\n    name: 'Tasks',\n    component: () => import('../views/Tasks.vue'),\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/departments',\n    name: 'Departments',\n    component: () => import('../views/Departments.vue'),\n    meta: { requiresAuth: true, requiresAdmin: true }\n  },\n  {\n    path: '/users',\n    name: 'Users',\n    component: () => import('../views/Users.vue'),\n    meta: { requiresAuth: true, requiresAdmin: true }\n  }\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n\n// 路由守卫\nrouter.beforeEach(async (to, from, next) => {\n  console.log('Route guard:', { to, from, isLoggedIn: store.getters.isLoggedIn })\n  \n  // 检查路由是否需要认证\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    // 检查用户是否已登录\n    if (!store.getters.isLoggedIn) {\n      next({\n        path: '/login',\n        query: { redirect: to.fullPath }\n      })\n      return\n    }\n    // 检查是否需要管理员权限\n    if (to.matched.some(record => record.meta.requiresAdmin)) {\n      if (!store.getters.isAdmin) {\n        next('/dashboard')\n        return\n      }\n    }\n  }\n  \n  // 如果已登录用户访问登录页，重定向到首页\n  if (to.path === '/login' && store.getters.isLoggedIn) {\n    if (from.path === '/dashboard') {\n      next(false)\n    } else {\n      next('/dashboard')\n    }\n    return\n  }\n  \n  next()\n})\n\nexport default router "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}